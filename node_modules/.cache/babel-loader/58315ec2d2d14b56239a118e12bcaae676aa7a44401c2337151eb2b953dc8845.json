{"ast":null,"code":"import { configureStore } from \"@reduxjs/toolkit\";\nimport uiSlice from \"./ui-slice\";\n\n// const initialCartState = { items: [] };\n\n// const cartSlice = createSlice({\n//   name: \"cart\",\n//   initialState: initialCartState,\n//   reducers: {\n\n//     addItem(state, action) {\n//       const newItem = action.payload;\n//       const existingItem = state.items.find(\n//         (item) => item.name === newItem.name\n//       );\n\n//       if (existingItem) {\n//         existingItem.quantity++;\n//         existingItem.total += newItem.price;\n\n//       } else {\n//         state.items.push({\n//           title: newItem.title,\n//           price: newItem.price,\n//           quantity: 1,\n//           total: newItem.price,\n//         });\n//       }\n//     },\n\n//     removeItem(state, action) {\n//         const name = action.payload\n//         const existingItem = state.items.find(\n//             (item) => item.name === name.name\n//           );\n\n//           if (existingItem.quantity === 1) {\n//             state.items.splice(item => item.name !== name)\n//           }\n//           else {\n//             existingItem.quantity--;\n//             existingItem.total -= existingItem.price;\n//           }\n//     },\n//   },\n// });\n\nexport const cartActions = cartSlice.actions;\nconst store = configureStore({\n  reducer: {\n    cart: cartSlice.reducer,\n    ui: uiSlice.reducer\n  }\n});\nexport default store;","map":{"version":3,"names":["configureStore","uiSlice","cartActions","cartSlice","actions","store","reducer","cart","ui"],"sources":["/Users/atla/Desktop/GitHub/advanced-redux/src/store/index.js"],"sourcesContent":["import { configureStore } from \"@reduxjs/toolkit\";\nimport uiSlice from \"./ui-slice\";\n\n// const initialCartState = { items: [] };\n\n// const cartSlice = createSlice({\n//   name: \"cart\",\n//   initialState: initialCartState,\n//   reducers: {\n\n//     addItem(state, action) {\n//       const newItem = action.payload;\n//       const existingItem = state.items.find(\n//         (item) => item.name === newItem.name\n//       );\n\n//       if (existingItem) {\n//         existingItem.quantity++;\n//         existingItem.total += newItem.price;\n\n//       } else {\n//         state.items.push({\n//           title: newItem.title,\n//           price: newItem.price,\n//           quantity: 1,\n//           total: newItem.price,\n//         });\n//       }\n//     },\n\n//     removeItem(state, action) {\n//         const name = action.payload\n//         const existingItem = state.items.find(\n//             (item) => item.name === name.name\n//           );\n      \n//           if (existingItem.quantity === 1) {\n//             state.items.splice(item => item.name !== name)\n//           }\n//           else {\n//             existingItem.quantity--;\n//             existingItem.total -= existingItem.price;\n//           }\n//     },\n//   },\n// });\n\nexport const cartActions = cartSlice.actions;\n\nconst store = configureStore({\n  reducer: { cart: cartSlice.reducer, ui: uiSlice.reducer },\n});\n\nexport default store;\n"],"mappings":"AAAA,SAASA,cAAc,QAAQ,kBAAkB;AACjD,OAAOC,OAAO,MAAM,YAAY;;AAEhC;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,MAAMC,WAAW,GAAGC,SAAS,CAACC,OAAO;AAE5C,MAAMC,KAAK,GAAGL,cAAc,CAAC;EAC3BM,OAAO,EAAE;IAAEC,IAAI,EAAEJ,SAAS,CAACG,OAAO;IAAEE,EAAE,EAAEP,OAAO,CAACK;EAAQ;AAC1D,CAAC,CAAC;AAEF,eAAeD,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}